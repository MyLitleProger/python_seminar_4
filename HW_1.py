# Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа.
# n - кол-во элементов первого множества.
# m - кол-во элементов второго множества.
# Затем пользователь вводит сами элементы множеств.
# Пример:
# 11 6
# 2 4 6 8 10 12 10 8 6 4 2
# 3 6 9 12 15 18
# 6 12
from random import randint

n_1 = [2, 4, 6, 8, 10, 12, 10, 8, 6, 4, 2]
n_2 = [3, 6, 9, 12, 15, 18]

nn = [i for i in n_2 if i in n_1]
nn.sort()
print(nn)


numbers_3 = [randint(1, 20) for i in range(10)]
print(f'списко 3: {numbers_3}')
numbers_4 = [randint(1, 20) for i in range(10)]
print(f'список 4 : {numbers_4}')
nnn = [i for i in numbers_4 if i in numbers_3]
nnn.sort()
print(f'вывод работы сорт: {nnn}')

# встречалась подобная задача сегодня в kata codewars, только там надо было вычесть один из другого
# пытаюсь научиться оптимизировать код в одну строку, но пока не во всех случая получается
